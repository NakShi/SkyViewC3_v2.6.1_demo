// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RobotStoreContextLib;

namespace SkyViewC3Service.Migrations
{
    [DbContext(typeof(RobotStoreContext))]
    [Migration("20200428023840_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3");

            modelBuilder.Entity("RobotStoreEntitiesLib.Grade", b =>
                {
                    b.Property<string>("GradeID")
                        .HasColumnType("TEXT");

                    b.HasKey("GradeID");

                    b.ToTable("Grade");
                });

            modelBuilder.Entity("RobotStoreEntitiesLib.GradeInitialPermission", b =>
                {
                    b.Property<string>("GradeID")
                        .HasColumnType("TEXT");

                    b.Property<string>("PermissionID")
                        .HasColumnType("TEXT");

                    b.HasKey("GradeID", "PermissionID");

                    b.HasIndex("PermissionID");

                    b.ToTable("GradeInitialPermission");
                });

            modelBuilder.Entity("RobotStoreEntitiesLib.Permission", b =>
                {
                    b.Property<string>("PermissionID")
                        .HasColumnType("TEXT");

                    b.HasKey("PermissionID");

                    b.ToTable("Permission");
                });

            modelBuilder.Entity("RobotStoreEntitiesLib.User", b =>
                {
                    b.Property<string>("UserID")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT")
                        .HasMaxLength(100);

                    b.Property<string>("GradeID")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(100);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("UserID");

                    b.HasIndex("GradeID");

                    b.ToTable("User");
                });

            modelBuilder.Entity("RobotStoreEntitiesLib.UserAction", b =>
                {
                    b.Property<int>("UserActionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Message")
                        .HasColumnType("TEXT");

                    b.Property<string>("Section")
                        .HasColumnType("TEXT");

                    b.Property<string>("Subsection")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserID")
                        .HasColumnType("TEXT");

                    b.HasKey("UserActionID");

                    b.HasIndex("UserID");

                    b.ToTable("UserAction");
                });

            modelBuilder.Entity("RobotStoreEntitiesLib.UserHistory", b =>
                {
                    b.Property<int>("UserHistoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AddByUserID")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("AddDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("GradeID")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserID")
                        .HasColumnType("TEXT");

                    b.HasKey("UserHistoryID");

                    b.HasIndex("AddByUserID");

                    b.HasIndex("GradeID");

                    b.HasIndex("UserID");

                    b.ToTable("UserHistory");
                });

            modelBuilder.Entity("RobotStoreEntitiesLib.UserPermission", b =>
                {
                    b.Property<string>("UserID")
                        .HasColumnType("TEXT");

                    b.Property<string>("PermissionID")
                        .HasColumnType("TEXT");

                    b.HasKey("UserID", "PermissionID");

                    b.HasIndex("PermissionID");

                    b.ToTable("UserPermission");
                });

            modelBuilder.Entity("RobotStoreEntitiesLib.UserPermissionHistory", b =>
                {
                    b.Property<int>("UserPermissionHistoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Action")
                        .HasColumnType("TEXT")
                        .HasMaxLength(10);

                    b.Property<string>("AddByUserID")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("AddDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("PermissionID")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserID")
                        .HasColumnType("TEXT");

                    b.HasKey("UserPermissionHistoryID");

                    b.HasIndex("AddByUserID");

                    b.HasIndex("PermissionID");

                    b.HasIndex("UserID");

                    b.ToTable("UserPermissionHistory");
                });

            modelBuilder.Entity("RobotStoreEntitiesLib.GradeInitialPermission", b =>
                {
                    b.HasOne("RobotStoreEntitiesLib.Grade", "Grade")
                        .WithMany("Permissions")
                        .HasForeignKey("GradeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RobotStoreEntitiesLib.Permission", "Permission")
                        .WithMany()
                        .HasForeignKey("PermissionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RobotStoreEntitiesLib.User", b =>
                {
                    b.HasOne("RobotStoreEntitiesLib.Grade", "Grade")
                        .WithMany("Users")
                        .HasForeignKey("GradeID");
                });

            modelBuilder.Entity("RobotStoreEntitiesLib.UserAction", b =>
                {
                    b.HasOne("RobotStoreEntitiesLib.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID");
                });

            modelBuilder.Entity("RobotStoreEntitiesLib.UserHistory", b =>
                {
                    b.HasOne("RobotStoreEntitiesLib.User", "AddBy")
                        .WithMany()
                        .HasForeignKey("AddByUserID");

                    b.HasOne("RobotStoreEntitiesLib.Grade", "Grade")
                        .WithMany()
                        .HasForeignKey("GradeID");

                    b.HasOne("RobotStoreEntitiesLib.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID");
                });

            modelBuilder.Entity("RobotStoreEntitiesLib.UserPermission", b =>
                {
                    b.HasOne("RobotStoreEntitiesLib.Permission", "Permission")
                        .WithMany()
                        .HasForeignKey("PermissionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RobotStoreEntitiesLib.User", "User")
                        .WithMany("Permissions")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RobotStoreEntitiesLib.UserPermissionHistory", b =>
                {
                    b.HasOne("RobotStoreEntitiesLib.User", "AddBy")
                        .WithMany()
                        .HasForeignKey("AddByUserID");

                    b.HasOne("RobotStoreEntitiesLib.Permission", "Permission")
                        .WithMany()
                        .HasForeignKey("PermissionID");

                    b.HasOne("RobotStoreEntitiesLib.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID");
                });
#pragma warning restore 612, 618
        }
    }
}
